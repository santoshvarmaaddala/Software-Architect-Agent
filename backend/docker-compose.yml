services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: varma

  requirements_parser:
    build:
      context: ./services/requirements-parser
    container_name: requirements_parser
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_URL: amqp://guest:varma@rabbitmq
    restart: unless-stopped

  architecture_planner:
    build:
      context: ./services/architecture-planner
    container_name: architecture_planner
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_URL: amqp://guest:varma@rabbitmq
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}   # Set in .env or host machine
    restart: unless-stopped

  diagram_generator:
    build: 
      context: ./services/diagram-generator
    container_name: diagram_generator
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_URL: amqp://guest:varma@rabbitmq
    restart: unless-stopped

  
  api_gateway:
    build: 
      context: ./services/api-gateway
    container_name: api_gateway
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_URL: amqp://guest:varma@rabbitmq:5672
      IN_QUEUE: requirement.submitted
      OUT_QUEUE: requirement.analysis.completed
    ports:
      - "4000:4000"
    restart: unless-stopped
